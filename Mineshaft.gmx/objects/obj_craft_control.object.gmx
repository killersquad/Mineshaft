<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="6" enumb="5">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if obj_inv.inventory = true
{
    if obj_inv_mouse.spr_index = obj_slot_control.inv[index,0] or obj_slot_control.inv[index,0] = 0
    {
        if obj_slot_control.inv[index,1] &lt;64 &amp;&amp; (obj_inv_mouse.spr_index != 0 &amp;&amp; obj_inv_mouse.inv_index != 0 &amp;&amp; obj_inv_mouse.spr_indexp != 0 &amp;&amp; obj_inv_mouse.inv_indexp != 0)
        {
            //place one item
            obj_slot_control.inv[index,0] = obj_inv_mouse.spr_index;
            obj_slot_control.inv[index,1] += 1;
            obj_inv_mouse.inv_index -= 1;
            
            if obj_inv_mouse.inv_index = 1
            {
                obj_inv_mouse.spr_index = 0;
            }
        }
    }else
    {
        if obj_slot_control.inv[index,0] != obj_inv_mouse.spr_index &amp;&amp; (obj_inv_mouse.spr_index != 0 &amp;&amp; obj_inv_mouse.inv_index != 0 &amp;&amp; obj_inv_mouse.spr_indexp != 0 &amp;&amp; obj_inv_mouse.inv_indexp != 0)
        {
            // swap items
            obj_inv_mouse.spr_index = obj_slot_control.inv[index,0];
            obj_inv_mouse.inv_index = obj_slot_control.inv[index,1];
            obj_slot_control.inv[index,0] = obj_inv_mouse.spr_indexp;
            obj_slot_control.inv[index,1] = obj_inv_mouse.inv_indexp;
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="4">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if obj_inv.inventory = true
{
     if obj_slot_control.inv[index,0] != 0 &amp;&amp; (obj_inv_mouse.spr_index = 0 &amp;&amp; obj_inv_mouse.inv_index = 0)
     {
        // select item
        obj_inv_mouse.spr_index = obj_slot_control.inv[index,0];
        obj_inv_mouse.inv_index = obj_slot_control.inv[index,1];
        obj_slot_control.inv[index,0] = 0;
        obj_slot_control.inv[index,1] = 0;
     }
     if obj_slot_control.inv[index,0] = 0 &amp;&amp; (obj_inv_mouse.spr_index != 0 &amp;&amp; obj_inv_mouse.inv_index != 0 &amp;&amp; obj_inv_mouse.spr_indexp != 0 &amp;&amp; obj_inv_mouse.inv_indexp != 0)
     {
        // place items
        obj_slot_control.inv[index,0] = obj_inv_mouse.spr_indexp;
        obj_slot_control.inv[index,1] = obj_inv_mouse.inv_indexp;
        obj_inv_mouse.spr_index = 0;
        obj_inv_mouse.inv_index = 0;
     }
     if obj_slot_control.inv[index,0] != 0 &amp;&amp; (obj_slot_control.inv[index,0] = obj_inv_mouse.spr_index &amp;&amp; obj_slot_control.inv[index,0]+obj_inv_mouse.spr_index &lt; 64) &amp;&amp; (obj_inv_mouse.spr_index != 0 &amp;&amp; obj_inv_mouse.inv_index != 0 &amp;&amp; obj_inv_mouse.spr_indexp != 0 &amp;&amp; obj_inv_mouse.inv_indexp != 0)
     {
        // place items
        obj_slot_control.inv[index,1] += obj_inv_mouse.inv_index;
        obj_inv_mouse.spr_index = 0;
        obj_inv_mouse.inv_index = 0;
     }
     if obj_slot_control.inv[index,0] != 0 &amp;&amp; (obj_slot_control.inv[index,0] != obj_inv_mouse.spr_index) &amp;&amp; (obj_inv_mouse.spr_index != 0 &amp;&amp; obj_inv_mouse.inv_index != 0 &amp;&amp; obj_inv_mouse.spr_indexp != 0 &amp;&amp; obj_inv_mouse.inv_indexp != 0)
     {
        //swap items
        obj_inv_mouse.spr_index = obj_slot_control.inv[index,0];
        obj_inv_mouse.inv_index = obj_slot_control.inv[index,1];
        obj_slot_control.inv[index,0] = obj_inv_mouse.spr_indexp;
        obj_slot_control.inv[index,1] = obj_inv_mouse.inv_indexp;
     }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if obj_inv.inventory = true
{
    draw_sprite(sprite_index,image_index,x,y);
    draw_sprite(obj_slot_control.spr[obj_slot_control.inv[index,0]],0,x+2,y+2);
    draw_set_font(font_8);
    c_gray2 = make_color_rgb(80,80,80);
    if obj_slot_control.inv[index,1] &gt;= 2
    {
        if obj_slot_control.inv[index,1] &gt;= 10
        {
            draw_text_color(x+7,y+8,obj_slot_control.inv[index,1],c_gray2,c_gray2,c_gray2,c_gray2,1);
            draw_text_color(x+6,y+7,obj_slot_control.inv[index,1],c_white,c_white,c_white,c_white,1);
        }
        else
        {
            draw_text_color(x+15,y+8,obj_slot_control.inv[index,1],c_gray2,c_gray2,c_gray2,c_gray2,1);
            draw_text_color(x+14,y+7,obj_slot_control.inv[index,1],c_white,c_white,c_white,c_white,1);
        }
    }
    scr_crafting1();
}

if (mouse_x &gt; x-2 &amp;&amp; mouse_x &lt; x + 34) &amp;&amp; (mouse_y &gt; y-2 &amp;&amp; mouse_y &lt; y + 34)
{
    image_index = 1;
    image_speed = 0;
}
else
{
    image_index = 0;
    image_speed = 0;
}

if obj_inv.inventory = false &amp;&amp; (obj_inv_mouse.spr_index != 0 &amp;&amp; obj_inv_mouse.inv_index != 0 &amp;&amp; obj_inv_mouse.spr_indexp != 0 &amp;&amp; obj_inv_mouse.inv_indexp != 0)
{
    itm = obj_inv_mouse.spr_index;
    if obj_arms.image_xscale = 1
    {
        repeat (obj_inv_mouse.inv_index) instance_create(obj_player.x+40,obj_player.y+16,obj_slot_control.itm[itm]);
        itm = 0;
        obj_inv_mouse.inv_index = 0;
    }
    if obj_arms.image_xscale = -1
    {
        repeat (obj_inv_mouse.inv_index) instance_create(obj_player.x-40,obj_player.y+16,obj_slot_control.itm[itm]);
        itm = 0;
        obj_inv_mouse.inv_index = 0;
    }
}









</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
